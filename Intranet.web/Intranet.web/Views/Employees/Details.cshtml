@model Intranet.web.Data.Entities.Employee

@{
    ViewData["Title"] = "Details";
}

<h2>Empleados</h2>

<div>
    <h4>Details</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User.Document)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Document)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Area.Nombre)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Area.Nombre)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.Rh)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Rh)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.Movil)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Movil)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="AddSons" class="btn btn-primary" asp-route-id="@Model.Id">Add Sons</a> |
    <a asp-action="AddCredit" class="btn btn-primary" asp-route-id="@Model.Id">Add Creditos</a> |
    <a asp-action="AddPerson" class="btn btn-primary" asp-route-id="@Model.Id">Add Person Contact</a> |
    <a asp-action="AddEndowment" class="btn btn-primary" asp-route-id="@Model.Id">Add Endowment</a> |
    <a asp-action="AddExam" class="btn btn-primary" asp-route-id="@Model.Id">Add Exams</a> |

    <a asp-action="Index" class="btn btn-success">Back to List</a>
</div>
@if (Model.Sons.Count == 0)
{
    <h5> No Sons added.</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Sons.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sons.FirstOrDefault().Datebirth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sons.FirstOrDefault().Genero)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Sons)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Datebirth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genero)
                    </td>
                    <td>
                        <a asp-action="EditSon" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |

                        <button data-id="@item.Id" class="btn btn-danger deleteSon" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
------------------------------------------------------------------------------
@if (Model.Credits.Count == 0)
{
    <h5> No Credits added.</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().NumberL)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().Quotmonthly)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().TotalPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().DeadlinePay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().StartDateLocal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().EndDateLocal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Credits.FirstOrDefault().IsActive)
                </th>
                <th>
                    Entidad
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Credits)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumberL)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quotmonthly)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeadlinePay)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateLocal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDateLocal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>

                    <td>
                        <a asp-action="EditCredit" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |

                        <button data-id="@item.Id" class="btn btn-danger deleteCredit" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
------------------------------------------------------------------------------
@if (Model.PersonContacts.Count == 0)
{
    <h5> No Person Contacts added.</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PersonContacts.FirstOrDefault().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonContacts.FirstOrDefault().Telephone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PersonContacts.FirstOrDefault().relationship)
                </th>


                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PersonContacts)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Telephone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.relationship)
                    </td>

                    <td>
                        <a asp-action="EditPersonContact" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |

                        <button data-id="@item.Id" class="btn btn-danger deletePerson" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
------------------------------------------------------------------------------
@if (Model.Exams.Count == 0)
{
    <h5> No Exams added.</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Exams.FirstOrDefault().ExamsType.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Exams.FirstOrDefault().StartDateLocal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Exams.FirstOrDefault().EndDateLocal)
                </th>


                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Exams)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExamsType.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateLocal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndDateLocal)
                    </td>

                    <td>
                        <a asp-action="EditExam" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |

                        <button data-id="@item.Id" class="btn btn-danger deleteExam" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
------------------------------------------------------------------------------
@if (Model.Endowments.Count == 0)
{
    <h5> No Endowments added.</h5>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Endowments.FirstOrDefault().Detail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Endowments.FirstOrDefault().Count)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Endowments.FirstOrDefault().Size)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Endowments.FirstOrDefault().DateDeliveryLocal)
                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Endowments)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Detail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Count)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateDeliveryLocal)
                    </td>
                    <td>
                        <a asp-action="EditEndowment" class="btn btn-warning" asp-route-id="@item.Id">Edit</a> |

                        <button data-id="@item.Id" class="btn btn-danger deleteEndowment" data-toggle="modal" data-target="#deleteDialog">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="modal fade" id="deleteDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Item</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete the record?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="btnYesDelete">Delete</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">
    	$(document).ready(function () {
        	// Delete item
        	var item_to_delete;
        	var action_to_delete;

            $('.deleteEndowment').click((e) => {
            	item_to_delete = e.currentTarget.dataset.id;
            	action_to_delete = 1;
        	});

            $('.deleteExam').click((e) => {
            	item_to_delete = e.currentTarget.dataset.id;
            	action_to_delete = 2;
            });
            $('.deletePerson').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
                action_to_delete = 3;
            });
            $('.deleteCredit').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
                action_to_delete = 4;
            });
            $('.deleteSon').click((e) => {
                item_to_delete = e.currentTarget.dataset.id;
                action_to_delete = 5;
            });

        	$("#btnYesDelete").click(function () {
            	if (action_to_delete == 1) {
                    window.location.href = '/Employees/DeleteEndowment/' + item_to_delete;
                } if (action_to_delete == 2) {
                    window.location.href = '/Employees/DeleteExam/' + item_to_delete;
                } if (action_to_delete == 3) {
                    window.location.href = '/Employees/DeletePersonContac/' + item_to_delete;
                } if (action_to_delete == 4) {
                    window.location.href = '/Employees/DeleteCredit/' + item_to_delete;
                } if (action_to_delete == 5) {
                    window.location.href = '/Employees/DeleteSon/' + item_to_delete;
                } 

        	});
    	});
    </script>
}


